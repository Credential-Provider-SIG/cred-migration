



WG Working Group                                               N. Steele
Internet-Draft                                                 1Password
Intended status: Informational                              19 July 2023
Expires: 20 January 2024


                   The Credential Migration Protocol
                        draft-cpsig-crimp-latest

Abstract

   This specification defines a protocol to securely move one or more
   user credentials between two credential providing applications.

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://example.com/LATEST.  Status information for this document may
   be found at https://datatracker.ietf.org/doc/draft-cpsig-crimp/.

   Discussion of this document takes place on the WG Working Group
   mailing list (mailto:WG@example.com), which is archived at
   https://example.com/WG.

   Source for this draft and an issue tracker can be found at
   https://github.com/USER/REPO.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 20 January 2024.

Copyright Notice

   Copyright (c) 2023 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
     1.1.  Scope
   2.  Terminology
     2.1.  Conventions and Definitions
     2.2.  Actors
   3.  Protocol Overview
   4.  Security Considerations
   5.  IANA Considerations
   6.  Implementation Requirements
   7.  References
     7.1.  Normative References
     7.2.  Informative References
   Acknowledgments
   Author's Address

1.  Introduction

   Individuals and organizations use credential providers to create and
   manage credentials on their behalf as a means to use stronger
   authentication factors.  These credential providers can be used in
   browsers, on network servers, and mobile and desktop platforms, and
   often sharing or synchronizing credentials between different
   instances of the same provider is an easy and common task.  However,
   transfer of credentials between two different providers has
   traditionally been an infrequent occurence, such as when a user or
   organization is attempting to migrate credentials from one provider
   to another.  As it becomes more common for users to have multiple
   credential providers that they use to create a manage credentials, it
   becomes important to address some of the security concerns with
   regards to migration currently: * Credential provider applications
   often export credentials to be imported in an insecure format, such
   as CSV, that undermines the security of the provider and potentially
   opens the credential owner to vulnerability. * Credential providers
   have no standard structure for the exported credential CSV, which can
   sometimes result in failure to properly migrate one or more
   credentials into a new provider. * Some credentials might be
   unallowed to be migrate, due to device policy or lack of algorithmic
   capability by the importing credential provider. * Because
   organizations lack a secure means of migrating user credentials,
   often they will apply device policy that prevents the export of
   credentials to a new provider under any circumstances, opting to
   create multiple credentials for a service.  In order to support
   credential provider interoporability and provide more secure means of
   credential transfer between providers, this document outlines a
   protocol for the import and export of one or more credentials between
   two credential providers on behalf of a user or organization in both
   an offline or online context.  Using Diffie-Hellman key exchange,
   this protocol allows the creation of a secure channel or data payload
   between two providers.

1.1.  Scope

   This protocol is scoped to describing the secure transmission of one
   or more credentials between two credential providers on the same or
   different devices managed by the same credential owner, capable of
   function in both online and offline contexts.  This protocol does not
   make any assumptions about the channels in which credential data is
   passed from the source provider to the destination provider.

2.  Terminology

2.1.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

2.2.  Actors

   Crimp has 3 types of actors:

   "credential owner":  An entity that is able to authenticate,
      authorize, access one or more credentials from within a credential
      provider.  The credential owner is in charge of authorizing or
      delegating authorization of the migration between the source
      credential provider and destination provider.  In the case of a
      credential owner being an individual, they are referred to as the
      end-user, an individual or service being delegated by an
      organization are considered credential owner agents.

   "credential provider":  Hardware or software capable of securely
      storing and managing credentials on behalf of their owner.  There
      are two credential providers when discussing migration: the source
      provider and the destination provider.  The destination provider
      initiates the export request and is where the credential data
      should arrive after migration, while the source encrypts and
      transfers the credential data to the destination provider.  These
      two credential providers will generally be two distinct pieces of
      hardware or software.

   "authorizing party":  An OPTIONAL certificate authority that can
      grant and attest certificates on behalf of a credential owner.
      These certificates are used to authenticate the credential agent
      and MAY be used to create the migration key used on behalf of the
      source and destination credential providers.

3.  Protocol Overview

          ┌──────────────────────────────────────────────────────┐
          │                  Authorizing Party                   │
          └─────┬──────────────────────────────────────────┬─────┘

                │   (2) Determine        (1) Create Export │
                     Migration Key              Request
   ┌────────────┴──┐                                  ┌────┴──────────┐
   │               ◀─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ┤               │
   │               │                                  │               │
   │               │                                  │               │
   │               │                                  │               │
   │┌─────────────┐│                                  │               │
   ││ (3)Encrypt  ││                                  │               │
   ││ Credential  ││                                  │               │
   ││    Data     ││                                  │               │
   │└─────────────┘│                                  │               │
   │               │       (4) Send Export Response   │               │
   │               │─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ▶┌─────────────┐│
   │               │                                  ││ (5) Decrypt ││
   │               │                                  ││   Bundle    ││
   │               │                                  │└─────────────┘│
   │               │                                  │               │
   │               │                                  │               │
   │               │                                  │               │
   │               │                                  │               │
   │Credential Data│                                  │Credential Data│
   │    Source     │                                  │  Destination  │
   └───────────────┘                                  └───────────────┘

                          Figure 1: Migration Flow

   The flow illustrated in Figure 1 shows the following: (1) The
   destination credential provider initiates the flow by creating an
   export request for the source.  The import request includes, an
   identifier, a challenge, the scope of the export request (such as
   which credentials should be exported), and a public key provided via
   x509 certificate that has been generated by the destination
   credential provider or an authorizing party. (2) If an end-user and/
   or authorizing party authorize the request, the source credential
   provider uses the export request to derive the migration key, a
   symmetric key created from the export request public key and a
   private key controlled by the source credential provider, or a key
   can be provided by the authorizing party. (3) The source collects and
   encrypts the requested credential data for export and signs the
   challenge provided by the destination (4) The export response is sent
   to the destination provider and includes the encrypted credential
   data, the signed challenge response, and an x509 certificate
   containing the public key of the source credential provider's
   migration key. (5) The destination provider validates the challenge
   and rederives the migration key, decrypting the credential data which
   is then stored.

4.  Security Considerations

   TODO Security

5.  IANA Considerations

   This document has no IANA actions.

6.  Implementation Requirements

   This section defines which algorithms and features of this
   specification are mandatory to implement.  Applications using this
   specification can impose additional requirements upon implementations
   that they use.

7.  References

7.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,
              Housley, R., and W. Polk, "Internet X.509 Public Key
              Infrastructure Certificate and Certificate Revocation List
              (CRL) Profile", RFC 5280, DOI 10.17487/RFC5280, May 2008,
              <https://www.rfc-editor.org/rfc/rfc5280>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

7.2.  Informative References

   [RFC6749]  Hardt, D., Ed., "The OAuth 2.0 Authorization Framework",
              RFC 6749, DOI 10.17487/RFC6749, October 2012,
              <https://www.rfc-editor.org/rfc/rfc6749>.

Acknowledgments

   TODO acknowledge.

Author's Address

   Nicholas Steele
   1Password
   Email: nick.steele@1password.com
